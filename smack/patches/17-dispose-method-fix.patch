Index: smack/tags/smack_3_2_2/source/org/jivesoftware/smackx/muc/MultiUserChat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1250
===================================================================
--- smack/tags/smack_3_2_2/source/org/jivesoftware/smackx/muc/MultiUserChat.java	(revision f6120e341a892aea8ef21a3159fb4ea5a28a7ada)
+++ smack/tags/smack_3_2_2/source/org/jivesoftware/smackx/muc/MultiUserChat.java	(revision 515f0e1e27a36ebdc6d850f9a6f75e231abe170b)
@@ -2541,7 +2541,7 @@
      * Releases all resources and prepares this instance for garbage collection.
      * Do not call when still in the room.
      */
-    public void dispose() {
+    public synchronized void dispose() {
         if (connection == null || roomListenerMultiplexor == null)
             return;
 
@@ -2550,6 +2550,9 @@
         for (PacketListener connectionListener : connectionListeners) {
             connection.removePacketListener(connectionListener);
         }
+
+        connection = null;
+        roomListenerMultiplexor = null;
     }
 
     protected void finalize() throws Throwable {
Index: smack/tags/smack_3_2_2/source/org/jivesoftware/smackx/muc/RoomListenerMultiplexor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1250
===================================================================
--- smack/tags/smack_3_2_2/source/org/jivesoftware/smackx/muc/RoomListenerMultiplexor.java	(revision f6120e341a892aea8ef21a3159fb4ea5a28a7ada)
+++ smack/tags/smack_3_2_2/source/org/jivesoftware/smackx/muc/RoomListenerMultiplexor.java	(revision 515f0e1e27a36ebdc6d850f9a6f75e231abe170b)
@@ -97,6 +97,10 @@
     }
 
     public void addRoom(String address, PacketMultiplexListener roomListener) {
+        if (filter.roomAddressTable.containsKey(address)) {
+            throw new IllegalStateException(
+                "Room for " + address + " already exists!");
+        }
         filter.addRoom(address);
         listener.addRoom(address, roomListener);
     }
